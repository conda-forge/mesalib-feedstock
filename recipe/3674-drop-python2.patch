From 46f16a42e21f88655f045fac6a140ba4d61a709f Mon Sep 17 00:00:00 2001
From: Eric Engestrom <eric@engestrom.ch>
Date: Sun, 2 Feb 2020 15:22:16 +0000
Subject: [PATCH 1/5] android: move to using python3

Signed-off-by: Eric Engestrom <eric@engestrom.ch>
---
 Android.mk                                   |  2 +-
 src/amd/Android.common.mk                    |  4 +--
 src/amd/Android.compiler.mk                  |  6 ++---
 src/amd/vulkan/Android.mk                    |  8 +++---
 src/broadcom/Android.genxml.mk               | 10 ++++----
 src/compiler/Android.glsl.gen.mk             |  8 +++---
 src/compiler/Android.nir.gen.mk              | 18 +++++++-------
 src/freedreno/Android.registers.mk           | 14 +++++------
 src/gallium/auxiliary/Android.mk             |  2 +-
 src/gallium/drivers/freedreno/Android.gen.mk |  4 +--
 src/gallium/drivers/iris/Android.mk          |  2 +-
 src/gallium/drivers/lima/Android.mk          |  2 +-
 src/gallium/drivers/r600/Android.mk          |  2 +-
 src/gallium/drivers/radeonsi/Android.mk      |  4 +--
 src/gallium/drivers/virgl/Android.mk         |  2 +-
 src/intel/Android.compiler.mk                |  2 +-
 src/intel/Android.genxml.mk                  | 26 ++++++++++----------
 src/intel/Android.isl.mk                     |  2 +-
 src/intel/Android.perf.mk                    |  2 +-
 src/intel/Android.vulkan.mk                  |  6 ++---
 src/mapi/Android.mk                          |  2 +-
 src/mesa/Android.gen.mk                      | 22 ++++++++---------
 src/mesa/Android.libmesa_git_sha1.mk         |  2 +-
 src/mesa/drivers/dri/i965/Android.mk         |  2 +-
 src/panfrost/Android.midgard.mk              |  2 +-
 src/util/Android.mk                          |  2 +-
 src/vulkan/Android.mk                        |  2 +-
 27 files changed, 80 insertions(+), 80 deletions(-)

diff --git a/Android.mk b/Android.mk
index 59d345b8af4..b2a18a1e7f6 100644
--- a/Android.mk
+++ b/Android.mk
@@ -42,7 +42,7 @@ MESA_DRI_MODULE_UNSTRIPPED_PATH := $(TARGET_OUT_SHARED_LIBRARIES_UNSTRIPPED)/$(M
 MESA_DRI_LDFLAGS := -Wl,--build-id=sha1
 
 MESA_COMMON_MK := $(MESA_TOP)/Android.common.mk
-MESA_PYTHON2 := python
+MESA_PYTHON := python3
 
 # Lists to convert driver names to boolean variables
 # in form of <driver name>.<boolean make variable>
diff --git a/src/amd/Android.common.mk b/src/amd/Android.common.mk
index 1ee06e9b63e..8fad9da7695 100644
--- a/src/amd/Android.common.mk
+++ b/src/amd/Android.common.mk
@@ -52,7 +52,7 @@ SID_TABLES_INPUTS := \
 $(intermediates)/common/sid_tables.h: $(SID_TABLES) $(SID_TABLES_INPUTS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(SID_TABLES) $(SID_TABLES_INPUTS) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(SID_TABLES) $(SID_TABLES_INPUTS) > $@ || ($(RM) $@; false)
 
 AMDGFXREGS := $(LOCAL_PATH)/registers/makeregheader.py
 
@@ -65,7 +65,7 @@ AMDGFXREGS_INPUTS := \
 $(intermediates)/common/amdgfxregs.h: $(AMDGFXREGS) $(AMDGFXREGS_INPUTS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(AMDGFXREGS) $(AMDGFXREGS_INPUTS) --sort address --guard AMDGFXREGS_H > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(AMDGFXREGS) $(AMDGFXREGS_INPUTS) --sort address --guard AMDGFXREGS_H > $@ || ($(RM) $@; false)
 
 LOCAL_C_INCLUDES := \
 	$(MESA_TOP)/include \
diff --git a/src/amd/Android.compiler.mk b/src/amd/Android.compiler.mk
index a62c93d9d33..89aa6c4c8c9 100644
--- a/src/amd/Android.compiler.mk
+++ b/src/amd/Android.compiler.mk
@@ -55,17 +55,17 @@ ACO_DEPS := $(MESA_TOP)/src/amd/compiler/aco_opcodes.py
 $(intermediates)/compiler/aco_opcodes.h: $(ACO_OPCODES_H_SCRIPT) $(ACO_DEPS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(ACO_OPCODES_H_SCRIPT) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(ACO_OPCODES_H_SCRIPT) > $@ || ($(RM) $@; false)
 
 $(intermediates)/compiler/aco_opcodes.cpp: $(ACO_OPCODES_CPP_SCRIPT) $(ACO_DEPS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(ACO_OPCODES_CPP_SCRIPT) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(ACO_OPCODES_CPP_SCRIPT) > $@ || ($(RM) $@; false)
 
 $(intermediates)/compiler/aco_builder.h: $(ACO_BUILDER_H_SCRIPT) $(ACO_DEPS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(ACO_BUILDER_H_SCRIPT) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(ACO_BUILDER_H_SCRIPT) > $@ || ($(RM) $@; false)
 
 LOCAL_C_INCLUDES := \
 	$(MESA_TOP)/src/amd \
diff --git a/src/amd/vulkan/Android.mk b/src/amd/vulkan/Android.mk
index 31e4b307fdf..964c740f1bd 100644
--- a/src/amd/vulkan/Android.mk
+++ b/src/amd/vulkan/Android.mk
@@ -94,7 +94,7 @@ $(intermediates)/radv_entrypoints.c: $(RADV_ENTRYPOINTS_SCRIPT) \
 					$(RADV_EXTENSIONS_SCRIPT) \
 					$(vulkan_api_xml)
 	@mkdir -p $(dir $@)
-	$(MESA_PYTHON2) $(RADV_ENTRYPOINTS_SCRIPT) \
+	$(MESA_PYTHON) $(RADV_ENTRYPOINTS_SCRIPT) \
 		--xml $(vulkan_api_xml) \
 		--outdir $(dir $@)
 
@@ -102,7 +102,7 @@ $(intermediates)/radv_entrypoints.h: $(intermediates)/radv_entrypoints.c
 
 $(intermediates)/radv_extensions.c: $(RADV_EXTENSIONS_SCRIPT) $(vulkan_api_xml)
 	@mkdir -p $(dir $@)
-	$(MESA_PYTHON2) $(RADV_EXTENSIONS_SCRIPT) \
+	$(MESA_PYTHON) $(RADV_EXTENSIONS_SCRIPT) \
 		--xml $(vulkan_api_xml) \
 		--out-c $@ \
 		--out-h $(addsuffix .h,$(basename $@))
@@ -113,7 +113,7 @@ $(intermediates)/vk_format_table.c: $(VK_FORMAT_TABLE_SCRIPT) \
 					$(VK_FORMAT_PARSE_SCRIPT) \
 					$(vk_format_layout_csv)
 	@mkdir -p $(dir $@)
-	$(MESA_PYTHON2) $(VK_FORMAT_TABLE_SCRIPT) $(vk_format_layout_csv) > $@
+	$(MESA_PYTHON) $(VK_FORMAT_TABLE_SCRIPT) $(vk_format_layout_csv) > $@
 
 RADV_GEN10_FORMAT_TABLE_INPUTS := \
 	$(MESA_TOP)/src/amd/vulkan/vk_format_layout.csv \
@@ -127,7 +127,7 @@ RADV_GEN10_FORMAT_TABLE := $(LOCAL_PATH)/gfx10_format_table.py
 $(intermediates)/gfx10_format_table.h: $(RADV_GEN10_FORMAT_TABLE) $(RADV_GEN10_FORMAT_TABLE_INPUTS) $(RADV_GEN10_FORMAT_TABLE_DEP)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(RADV_GEN10_FORMAT_TABLE) $(RADV_GEN10_FORMAT_TABLE_INPUTS) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(RADV_GEN10_FORMAT_TABLE) $(RADV_GEN10_FORMAT_TABLE_INPUTS) > $@ || ($(RM) $@; false)
 
 LOCAL_SHARED_LIBRARIES += $(RADV_SHARED_LIBRARIES)
 
diff --git a/src/broadcom/Android.genxml.mk b/src/broadcom/Android.genxml.mk
index 91e0de05d98..704488311a4 100644
--- a/src/broadcom/Android.genxml.mk
+++ b/src/broadcom/Android.genxml.mk
@@ -45,25 +45,25 @@ define pack-header-gen
 	$(hide) $(PRIVATE_SCRIPT) $(PRIVATE_SCRIPT_FLAGS) $(PRIVATE_XML) $(PRIVATE_VER) > $@
 endef
 
-$(intermediates)/broadcom/cle/v3d_packet_v21_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/cle/gen_pack_header.py
+$(intermediates)/broadcom/cle/v3d_packet_v21_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/cle/gen_pack_header.py
 $(intermediates)/broadcom/cle/v3d_packet_v21_pack.h: PRIVATE_XML := $(LOCAL_PATH)/cle/v3d_packet_v21.xml
 $(intermediates)/broadcom/cle/v3d_packet_v21_pack.h: PRIVATE_VER := 21
 $(intermediates)/broadcom/cle/v3d_packet_v21_pack.h: $(LOCAL_PATH)/cle/v3d_packet_v21.xml $(LOCAL_PATH)/cle/gen_pack_header.py
 	$(call pack-header-gen)
 
-$(intermediates)/broadcom/cle/v3d_packet_v33_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/cle/gen_pack_header.py
+$(intermediates)/broadcom/cle/v3d_packet_v33_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/cle/gen_pack_header.py
 $(intermediates)/broadcom/cle/v3d_packet_v33_pack.h: PRIVATE_XML := $(LOCAL_PATH)/cle/v3d_packet_v33.xml
 $(intermediates)/broadcom/cle/v3d_packet_v33_pack.h: PRIVATE_VER := 33
 $(intermediates)/broadcom/cle/v3d_packet_v33_pack.h: $(LOCAL_PATH)/cle/v3d_packet_v33.xml $(LOCAL_PATH)/cle/gen_pack_header.py
 	$(call pack-header-gen)
 
-$(intermediates)/broadcom/cle/v3d_packet_v41_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/cle/gen_pack_header.py
+$(intermediates)/broadcom/cle/v3d_packet_v41_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/cle/gen_pack_header.py
 $(intermediates)/broadcom/cle/v3d_packet_v41_pack.h: PRIVATE_XML := $(LOCAL_PATH)/cle/v3d_packet_v33.xml
 $(intermediates)/broadcom/cle/v3d_packet_v41_pack.h: PRIVATE_VER := 41
 $(intermediates)/broadcom/cle/v3d_packet_v41_pack.h: $(LOCAL_PATH)/cle/v3d_packet_v33.xml $(LOCAL_PATH)/cle/gen_pack_header.py
 	$(call pack-header-gen)
 
-$(intermediates)/broadcom/cle/v3d_packet_v42_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/cle/gen_pack_header.py
+$(intermediates)/broadcom/cle/v3d_packet_v42_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/cle/gen_pack_header.py
 $(intermediates)/broadcom/cle/v3d_packet_v42_pack.h: PRIVATE_XML := $(LOCAL_PATH)/cle/v3d_packet_v33.xml
 $(intermediates)/broadcom/cle/v3d_packet_v42_pack.h: PRIVATE_VER := 42
 $(intermediates)/broadcom/cle/v3d_packet_v42_pack.h: $(LOCAL_PATH)/cle/v3d_packet_v33.xml $(LOCAL_PATH)/cle/gen_pack_header.py
@@ -72,7 +72,7 @@ $(intermediates)/broadcom/cle/v3d_packet_v42_pack.h: $(LOCAL_PATH)/cle/v3d_packe
 $(intermediates)/broadcom/cle/v3d_xml.h: $(addprefix $(MESA_TOP)/src/broadcom/,$(BROADCOM_GENXML_XML_FILES)) $(MESA_TOP)/src/intel/genxml/gen_zipped_file.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/intel/genxml/gen_zipped_file.py $(addprefix $(MESA_TOP)/src/broadcom/,$(BROADCOM_GENXML_XML_FILES)) > $@ || (rm -f $@; false)
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/intel/genxml/gen_zipped_file.py $(addprefix $(MESA_TOP)/src/broadcom/,$(BROADCOM_GENXML_XML_FILES)) > $@ || (rm -f $@; false)
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := \
 	$(MESA_TOP)/src/broadcom/cle \
diff --git a/src/compiler/Android.glsl.gen.mk b/src/compiler/Android.glsl.gen.mk
index 1308de2db97..99aef0b75e9 100644
--- a/src/compiler/Android.glsl.gen.mk
+++ b/src/compiler/Android.glsl.gen.mk
@@ -92,16 +92,16 @@ $(intermediates)/glsl/glcpp/glcpp-parse.c: $(LOCAL_PATH)/glsl/glcpp/glcpp-parse.
 
 $(intermediates)/glsl/ir_expression_operation.h: $(LOCAL_PATH)/glsl/ir_expression_operation.py
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< enum > $@
+	$(hide) $(MESA_PYTHON) $< enum > $@
 
 $(intermediates)/glsl/ir_expression_operation_constant.h: $(LOCAL_PATH)/glsl/ir_expression_operation.py
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< constant > $@
+	$(hide) $(MESA_PYTHON) $< constant > $@
 
 $(intermediates)/glsl/ir_expression_operation_strings.h: $(LOCAL_PATH)/glsl/ir_expression_operation.py
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< strings > $@
+	$(hide) $(MESA_PYTHON) $< strings > $@
 
 $(intermediates)/glsl/float64_glsl.h: $(LOCAL_PATH)/glsl/xxd.py
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< $(MESA_TOP)/src/compiler/glsl/float64.glsl $@ -n float64_source > $@
+	$(hide) $(MESA_PYTHON) $< $(MESA_TOP)/src/compiler/glsl/float64.glsl $@ -n float64_source > $@
diff --git a/src/compiler/Android.nir.gen.mk b/src/compiler/Android.nir.gen.mk
index e753bb77ad1..4c6cf8acb62 100644
--- a/src/compiler/Android.nir.gen.mk
+++ b/src/compiler/Android.nir.gen.mk
@@ -57,7 +57,7 @@ nir_builder_opcodes_deps := \
 
 $(intermediates)/nir/nir_builder_opcodes.h: $(nir_builder_opcodes_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(nir_builder_opcodes_gen) $< > $@
+	$(hide) $(MESA_PYTHON) $(nir_builder_opcodes_gen) $< > $@
 
 nir_constant_expressions_gen := $(LOCAL_PATH)/nir/nir_constant_expressions.py
 nir_constant_expressions_deps := \
@@ -66,7 +66,7 @@ nir_constant_expressions_deps := \
 
 $(intermediates)/nir/nir_constant_expressions.c: $(nir_constant_expressions_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(nir_constant_expressions_gen) $< > $@
+	$(hide) $(MESA_PYTHON) $(nir_constant_expressions_gen) $< > $@
 
 nir_opcodes_h_gen := $(LOCAL_PATH)/nir/nir_opcodes_h.py
 nir_opcodes_h_deps := \
@@ -75,7 +75,7 @@ nir_opcodes_h_deps := \
 
 $(intermediates)/nir/nir_opcodes.h: $(nir_opcodes_h_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(nir_opcodes_h_gen) $< > $@
+	$(hide) $(MESA_PYTHON) $(nir_opcodes_h_gen) $< > $@
 
 nir_opcodes_c_gen := $(LOCAL_PATH)/nir/nir_opcodes_c.py
 nir_opcodes_c_deps := \
@@ -84,7 +84,7 @@ nir_opcodes_c_deps := \
 
 $(intermediates)/nir/nir_opcodes.c: $(nir_opcodes_c_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(nir_opcodes_c_gen) $< > $@
+	$(hide) $(MESA_PYTHON) $(nir_opcodes_c_gen) $< > $@
 
 nir_opt_algebraic_gen := $(LOCAL_PATH)/nir/nir_opt_algebraic.py
 nir_opt_algebraic_deps := \
@@ -93,22 +93,22 @@ nir_opt_algebraic_deps := \
 
 $(intermediates)/nir/nir_opt_algebraic.c: $(nir_opt_algebraic_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(nir_opt_algebraic_gen) $< > $@
+	$(hide) $(MESA_PYTHON) $(nir_opt_algebraic_gen) $< > $@
 
 $(intermediates)/spirv/spirv_info.c: $(LOCAL_PATH)/spirv/spirv_info_c.py $(LOCAL_PATH)/spirv/spirv.core.grammar.json
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $^ $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $^ $@ || ($(RM) $@; false)
 
 $(intermediates)/spirv/vtn_gather_types.c:: $(LOCAL_PATH)/spirv/vtn_gather_types_c.py $(LOCAL_PATH)/spirv/spirv.core.grammar.json
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $^ $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $^ $@ || ($(RM) $@; false)
 
 nir_intrinsics_h_gen := $(LOCAL_PATH)/nir/nir_intrinsics_h.py
 $(intermediates)/nir/nir_intrinsics.h: $(LOCAL_PATH)/nir/nir_intrinsics.py $(nir_intrinsics_h_gen)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(nir_intrinsics_h_gen) --outdir $(dir $@) || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(nir_intrinsics_h_gen) --outdir $(dir $@) || ($(RM) $@; false)
 
 nir_intrinsics_c_gen := $(LOCAL_PATH)/nir/nir_intrinsics_c.py
 $(intermediates)/nir/nir_intrinsics.c: $(LOCAL_PATH)/nir/nir_intrinsics.py $(nir_intrinsics_c_gen)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(nir_intrinsics_c_gen) --outdir $(dir $@) || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(nir_intrinsics_c_gen) --outdir $(dir $@) || ($(RM) $@; false)
diff --git a/src/freedreno/Android.registers.mk b/src/freedreno/Android.registers.mk
index 085eb5f07c7..3c5d4108dd5 100644
--- a/src/freedreno/Android.registers.mk
+++ b/src/freedreno/Android.registers.mk
@@ -49,37 +49,37 @@ LOCAL_GENERATED_SOURCES += $(addprefix $(intermediates)/registers/, \
 $(intermediates)/registers/a2xx.xml.h: $(LOCAL_PATH)/registers/a2xx.xml $(MESA_TOP)/src/freedreno/registers/gen_header.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
 
 $(intermediates)/registers/a3xx.xml.h: $(LOCAL_PATH)/registers/a3xx.xml $(MESA_TOP)/src/freedreno/registers/gen_header.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
 
 $(intermediates)/registers/a4xx.xml.h: $(LOCAL_PATH)/registers/a4xx.xml $(MESA_TOP)/src/freedreno/registers/gen_header.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
 
 $(intermediates)/registers/a5xx.xml.h: $(LOCAL_PATH)/registers/a5xx.xml $(MESA_TOP)/src/freedreno/registers/gen_header.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
 
 $(intermediates)/registers/a6xx.xml.h: $(LOCAL_PATH)/registers/a6xx.xml $(MESA_TOP)/src/freedreno/registers/gen_header.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
 
 $(intermediates)/registers/adreno_common.xml.h: $(LOCAL_PATH)/registers/adreno_common.xml $(MESA_TOP)/src/freedreno/registers/gen_header.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
 
 $(intermediates)/registers/adreno_pm4.xml.h: $(LOCAL_PATH)/registers/adreno_pm4.xml $(MESA_TOP)/src/freedreno/registers/gen_header.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/freedreno/registers/gen_header.py $< > $@
 
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := \
diff --git a/src/gallium/auxiliary/Android.mk b/src/gallium/auxiliary/Android.mk
index 7e8b2d31e16..6f03cc1867e 100644
--- a/src/gallium/auxiliary/Android.mk
+++ b/src/gallium/auxiliary/Android.mk
@@ -62,7 +62,7 @@ LOCAL_MODULE_CLASS := STATIC_LIBRARIES
 intermediates := $(call local-generated-sources-dir)
 LOCAL_GENERATED_SOURCES := $(addprefix $(intermediates)/, $(GENERATED_SOURCES))
 
-$(LOCAL_GENERATED_SOURCES): PRIVATE_PYTHON := $(MESA_PYTHON2)
+$(LOCAL_GENERATED_SOURCES): PRIVATE_PYTHON := $(MESA_PYTHON)
 $(LOCAL_GENERATED_SOURCES): PRIVATE_CUSTOM_TOOL = $(PRIVATE_PYTHON) $^ > $@
 
 $(intermediates)/indices/u_indices_gen.c \
diff --git a/src/gallium/drivers/freedreno/Android.gen.mk b/src/gallium/drivers/freedreno/Android.gen.mk
index 21ee52b7e33..63bc9d85a5a 100644
--- a/src/gallium/drivers/freedreno/Android.gen.mk
+++ b/src/gallium/drivers/freedreno/Android.gen.mk
@@ -36,11 +36,11 @@ intermediates := $(call local-generated-sources-dir)
 
 $(intermediates)/ir3/ir3_nir_trig.c: $(ir3_nir_trig_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< -p $(MESA_TOP)/src/compiler/nir > $@
+	$(hide) $(MESA_PYTHON) $< -p $(MESA_TOP)/src/compiler/nir > $@
 
 $(intermediates)/ir3/ir3_nir_imul.c: $(ir3_nir_imul_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< -p $(MESA_TOP)/src/compiler/nir > $@
+	$(hide) $(MESA_PYTHON) $< -p $(MESA_TOP)/src/compiler/nir > $@
 
 LOCAL_GENERATED_SOURCES += $(addprefix $(intermediates)/, \
 	$(ir3_GENERATED_FILES))
diff --git a/src/gallium/drivers/iris/Android.mk b/src/gallium/drivers/iris/Android.mk
index cb80265c35f..88952c165cf 100644
--- a/src/gallium/drivers/iris/Android.mk
+++ b/src/gallium/drivers/iris/Android.mk
@@ -160,7 +160,7 @@ MERGE_DRIINFO := $(MESA_TOP)/src/util/merge_driinfo.py
 $(intermediates)/iris/iris_driinfo.h: $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS) > $@ || ($(RM) $@; false)
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := $(intermediates)
 
diff --git a/src/gallium/drivers/lima/Android.mk b/src/gallium/drivers/lima/Android.mk
index aea52241911..1a65a2ce3d3 100644
--- a/src/gallium/drivers/lima/Android.mk
+++ b/src/gallium/drivers/lima/Android.mk
@@ -90,7 +90,7 @@ intermediates := $(call local-generated-sources-dir)
 $(intermediates)/lima_nir_algebraic.c: $(LOCAL_PATH)/ir/lima_nir_algebraic.py
 	@echo "target Generated: $(PRIVATE_MODULE) <= $(notdir $(@))"
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< -p $(MESA_TOP)/src/compiler/nir/ > $@
+	$(hide) $(MESA_PYTHON) $< -p $(MESA_TOP)/src/compiler/nir/ > $@
 
 LOCAL_GENERATED_SOURCES := \
 	$(intermediates)/lima_nir_algebraic.c \
diff --git a/src/gallium/drivers/r600/Android.mk b/src/gallium/drivers/r600/Android.mk
index 19a3ba8209f..ddcf296d193 100644
--- a/src/gallium/drivers/r600/Android.mk
+++ b/src/gallium/drivers/r600/Android.mk
@@ -45,7 +45,7 @@ LOCAL_GENERATED_SOURCES += $(addprefix $(intermediates)/, $(R600_GENERATED_FILES
 $(intermediates)/egd_tables.h: $(MESA_TOP)/src/gallium/drivers/r600/egd_tables.py $(MESA_TOP)/src/gallium/drivers/r600/evergreend.h
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/gallium/drivers/r600/egd_tables.py $(MESA_TOP)/src/gallium/drivers/r600/evergreend.h > $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/gallium/drivers/r600/egd_tables.py $(MESA_TOP)/src/gallium/drivers/r600/evergreend.h > $@
 
 ifeq ($(MESA_ENABLE_LLVM),true)
 $(call mesa-build-with-llvm)
diff --git a/src/gallium/drivers/radeonsi/Android.mk b/src/gallium/drivers/radeonsi/Android.mk
index f69b0d9219e..89691725093 100644
--- a/src/gallium/drivers/radeonsi/Android.mk
+++ b/src/gallium/drivers/radeonsi/Android.mk
@@ -62,7 +62,7 @@ MERGE_DRIINFO := $(MESA_TOP)/src/util/merge_driinfo.py
 $(intermediates)/radeonsi/si_driinfo.h: $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS) > $@ || ($(RM) $@; false)
 
 GEN10_FORMAT_TABLE_INPUTS := \
 	$(MESA_TOP)/src/util/format/u_format.csv \
@@ -76,7 +76,7 @@ GEN10_FORMAT_TABLE := $(LOCAL_PATH)/gfx10_format_table.py
 $(intermediates)/radeonsi/gfx10_format_table.h: $(GEN10_FORMAT_TABLE) $(GEN10_FORMAT_TABLE_INPUTS) $(GEN10_FORMAT_TABLE_DEP)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(GEN10_FORMAT_TABLE) $(GEN10_FORMAT_TABLE_INPUTS) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(GEN10_FORMAT_TABLE) $(GEN10_FORMAT_TABLE_INPUTS) > $@ || ($(RM) $@; false)
 
 LOCAL_C_INCLUDES += $(intermediates)/radeonsi
 
diff --git a/src/gallium/drivers/virgl/Android.mk b/src/gallium/drivers/virgl/Android.mk
index c06c16558c3..930ba9072a0 100644
--- a/src/gallium/drivers/virgl/Android.mk
+++ b/src/gallium/drivers/virgl/Android.mk
@@ -43,7 +43,7 @@ MERGE_DRIINFO := $(MESA_TOP)/src/util/merge_driinfo.py
 $(intermediates)/virgl/virgl_driinfo.h: $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS)
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS) > $@ || ($(RM) $@; false)
+	$(hide) $(MESA_PYTHON) $(MERGE_DRIINFO) $(GEN_DRIINFO_INPUTS) > $@ || ($(RM) $@; false)
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := $(intermediates)
 
diff --git a/src/intel/Android.compiler.mk b/src/intel/Android.compiler.mk
index c2b01221dfc..66544545042 100644
--- a/src/intel/Android.compiler.mk
+++ b/src/intel/Android.compiler.mk
@@ -54,7 +54,7 @@ intermediates := $(call local-generated-sources-dir)
 
 $(intermediates)/compiler/brw_nir_trig_workarounds.c: $(brw_nir_trig_workarounds_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< -p $(MESA_TOP)/src/compiler/nir > $@
+	$(hide) $(MESA_PYTHON) $< -p $(MESA_TOP)/src/compiler/nir > $@
 
 LOCAL_STATIC_LIBRARIES = libmesa_genxml
 
diff --git a/src/intel/Android.genxml.mk b/src/intel/Android.genxml.mk
index b8cb15b037f..0d007ce8449 100644
--- a/src/intel/Android.genxml.mk
+++ b/src/intel/Android.genxml.mk
@@ -49,64 +49,64 @@ define header-gen
 	$(hide) $(PRIVATE_SCRIPT) $(PRIVATE_SCRIPT_FLAGS) $(PRIVATE_XML) > $@
 endef
 
-$(intermediates)/genxml/genX_bits.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_bits_header.py
+$(intermediates)/genxml/genX_bits.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_bits_header.py
 $(intermediates)/genxml/genX_bits.h: PRIVATE_SCRIPT_FLAGS := --cpp-guard=GENX_BITS_H
 $(intermediates)/genxml/genX_bits.h: PRIVATE_XML := $(addprefix $(LOCAL_PATH)/,$(GENXML_XML_FILES))
 $(intermediates)/genxml/genX_bits.h: $(LOCAL_PATH)/genxml/gen_bits_header.py
 $(intermediates)/genxml/genX_bits.h: $(addprefix $(LOCAL_PATH)/,$(GENXML_XML_FILES))
 	$(call header-gen)
 
-$(intermediates)/genxml/gen4_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen4_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen4_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen4.xml
 $(intermediates)/genxml/gen4_pack.h: $(LOCAL_PATH)/genxml/gen4.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen45_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen45_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen45_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen45.xml
 $(intermediates)/genxml/gen45_pack.h: $(LOCAL_PATH)/genxml/gen45.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen5_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen5_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen5_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen5.xml
 $(intermediates)/genxml/gen5_pack.h: $(LOCAL_PATH)/genxml/gen5.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen6_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen6_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen6_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen6.xml
 $(intermediates)/genxml/gen6_pack.h: $(LOCAL_PATH)/genxml/gen6.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen7_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen7_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen7_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen7.xml
 $(intermediates)/genxml/gen7_pack.h: $(LOCAL_PATH)/genxml/gen7.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen75_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen75_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen75_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen75.xml
 $(intermediates)/genxml/gen75_pack.h: $(LOCAL_PATH)/genxml/gen75.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen8_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen8_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen8_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen8.xml
 $(intermediates)/genxml/gen8_pack.h: $(LOCAL_PATH)/genxml/gen8.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen9_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen9_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen9_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen9.xml
 $(intermediates)/genxml/gen9_pack.h: $(LOCAL_PATH)/genxml/gen9.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen10_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen10_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen10_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen10.xml
 $(intermediates)/genxml/gen10_pack.h: $(LOCAL_PATH)/genxml/gen10.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen11_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen11_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen11_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen11.xml
 $(intermediates)/genxml/gen11_pack.h: $(LOCAL_PATH)/genxml/gen11.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
 
-$(intermediates)/genxml/gen12_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/genxml/gen_pack_header.py
+$(intermediates)/genxml/gen12_pack.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/genxml/gen_pack_header.py
 $(intermediates)/genxml/gen12_pack.h: PRIVATE_XML := $(LOCAL_PATH)/genxml/gen12.xml
 $(intermediates)/genxml/gen12_pack.h: $(LOCAL_PATH)/genxml/gen12.xml $(LOCAL_PATH)/genxml/gen_pack_header.py
 	$(call header-gen)
@@ -114,7 +114,7 @@ $(intermediates)/genxml/gen12_pack.h: $(LOCAL_PATH)/genxml/gen12.xml $(LOCAL_PAT
 $(intermediates)/genxml/genX_xml.h: $(addprefix $(MESA_TOP)/src/intel/,$(GENXML_XML_FILES)) $(MESA_TOP)/src/intel/genxml/gen_zipped_file.py
 	@mkdir -p $(dir $@)
 	@echo "Gen Header: $(PRIVATE_MODULE) <= $(notdir $(@))"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/src/intel/genxml/gen_zipped_file.py $(addprefix $(MESA_TOP)/src/intel/,$(GENXML_XML_FILES)) > $@ || (rm -f $@; false)
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/src/intel/genxml/gen_zipped_file.py $(addprefix $(MESA_TOP)/src/intel/,$(GENXML_XML_FILES)) > $@ || (rm -f $@; false)
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := \
 	$(MESA_TOP)/src/intel \
diff --git a/src/intel/Android.isl.mk b/src/intel/Android.isl.mk
index 85093141c70..2477761233b 100644
--- a/src/intel/Android.isl.mk
+++ b/src/intel/Android.isl.mk
@@ -316,7 +316,7 @@ isl_format_layout_deps := \
 	$(LOCAL_PATH)/isl/gen_format_layout.py \
 	$(LOCAL_PATH)/isl/isl_format_layout.csv
 
-$(intermediates)/isl/isl_format_layout.c: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/isl/gen_format_layout.py
+$(intermediates)/isl/isl_format_layout.c: PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/isl/gen_format_layout.py
 $(intermediates)/isl/isl_format_layout.c: PRIVATE_CSV := $(LOCAL_PATH)/isl/isl_format_layout.csv
 $(intermediates)/isl/isl_format_layout.c: $(isl_format_layout_deps)
 	$(call bash-gen)
diff --git a/src/intel/Android.perf.mk b/src/intel/Android.perf.mk
index 0d7d746a632..f581a229bb2 100644
--- a/src/intel/Android.perf.mk
+++ b/src/intel/Android.perf.mk
@@ -41,7 +41,7 @@ LOCAL_GENERATED_SOURCES += $(addprefix $(intermediates)/, \
 $(intermediates)/perf/gen_perf_metrics.c: $(LOCAL_PATH)/perf/gen_perf.py $(addprefix $(MESA_TOP)/src/intel/,$(GEN_PERF_XML_FILES))
 	@echo "target Generated: $(PRIVATE_MODULE) <= $(notdir $(@))"
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< \
+	$(hide) $(MESA_PYTHON) $< \
 	--code=$@ \
 	--header=$(@:%.c=%.h) \
 	$(addprefix $(MESA_TOP)/src/intel/,$(GEN_PERF_XML_FILES))
diff --git a/src/intel/Android.vulkan.mk b/src/intel/Android.vulkan.mk
index c5280b0bf04..c5a856d3a85 100644
--- a/src/intel/Android.vulkan.mk
+++ b/src/intel/Android.vulkan.mk
@@ -247,7 +247,7 @@ $(intermediates)/vulkan/anv_entrypoints.c: $(ANV_ENTRYPOINTS_GEN_SCRIPT) \
 					   $(ANV_EXTENSIONS_SCRIPT) \
 					   $(VULKAN_API_XML)
 	@mkdir -p $(dir $@)
-	$(MESA_PYTHON2) $(ANV_ENTRYPOINTS_GEN_SCRIPT) \
+	$(MESA_PYTHON) $(ANV_ENTRYPOINTS_GEN_SCRIPT) \
 		--xml $(VULKAN_API_XML) \
 		--outdir $(dir $@)
 
@@ -257,7 +257,7 @@ $(intermediates)/vulkan/anv_extensions.c: $(ANV_EXTENSIONS_GEN_SCRIPT) \
 					  $(ANV_EXTENSIONS_SCRIPT) \
 					  $(VULKAN_API_XML)
 	@mkdir -p $(dir $@)
-	$(MESA_PYTHON2) $(ANV_EXTENSIONS_GEN_SCRIPT) \
+	$(MESA_PYTHON) $(ANV_EXTENSIONS_GEN_SCRIPT) \
 		--xml $(VULKAN_API_XML) \
 		--out-c $@
 
@@ -265,7 +265,7 @@ $(intermediates)/vulkan/anv_extensions.h: $(ANV_EXTENSIONS_GEN_SCRIPT) \
 					   $(ANV_EXTENSIONS_SCRIPT) \
 					   $(VULKAN_API_XML)
 	@mkdir -p $(dir $@)
-	$(MESA_PYTHON2) $(ANV_EXTENSIONS_GEN_SCRIPT) \
+	$(MESA_PYTHON) $(ANV_EXTENSIONS_GEN_SCRIPT) \
 		--xml $(VULKAN_API_XML) \
 		--out-h $@
 
diff --git a/src/mapi/Android.mk b/src/mapi/Android.mk
index 9405d2ac3d5..6277a6afc82 100644
--- a/src/mapi/Android.mk
+++ b/src/mapi/Android.mk
@@ -73,7 +73,7 @@ mapi_abi_deps := \
 	$(wildcard $(LOCAL_PATH)/glapi/gen/*.xml) \
 	$(LOCAL_PATH)/mapi_abi.py
 
-$(mapi_abi_headers): PRIVATE_SCRIPT := $(MESA_PYTHON2) $(LOCAL_PATH)/mapi_abi.py
+$(mapi_abi_headers): PRIVATE_SCRIPT := $(MESA_PYTHON) $(LOCAL_PATH)/mapi_abi.py
 $(mapi_abi_headers): PRIVATE_APIXML := $(LOCAL_PATH)/glapi/gen/gl_and_es_API.xml
 $(mapi_abi_headers): $(mapi_abi_deps)
 	@mkdir -p $(dir $@)
diff --git a/src/mesa/Android.gen.mk b/src/mesa/Android.gen.mk
index ff4f5e4e4d8..ac53e99bfe7 100644
--- a/src/mesa/Android.gen.mk
+++ b/src/mesa/Android.gen.mk
@@ -63,37 +63,37 @@ define es-gen
 	$(hide) $(PRIVATE_SCRIPT) $(1) $(PRIVATE_XML) > $@
 endef
 
-$(intermediates)/main/dispatch.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(glapi)/gl_table.py
+$(intermediates)/main/dispatch.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(glapi)/gl_table.py
 $(intermediates)/main/dispatch.h: PRIVATE_XML := -f $(glapi)/gl_and_es_API.xml
 
 $(intermediates)/main/dispatch.h: $(dispatch_deps)
 	$(call es-gen, $* -m remap_table)
 
-$(intermediates)/main/remap_helper.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(glapi)/remap_helper.py
+$(intermediates)/main/remap_helper.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(glapi)/remap_helper.py
 $(intermediates)/main/remap_helper.h: PRIVATE_XML := -f $(glapi)/gl_and_es_API.xml
 
 $(intermediates)/main/remap_helper.h: $(dispatch_deps)
 	$(call es-gen, $*)
 
-$(intermediates)/main/enums.c: PRIVATE_SCRIPT :=$(MESA_PYTHON2) $(glapi)/gl_enums.py
+$(intermediates)/main/enums.c: PRIVATE_SCRIPT :=$(MESA_PYTHON) $(glapi)/gl_enums.py
 $(intermediates)/main/enums.c: PRIVATE_XML := -f $(glapi)/../registry/gl.xml
 
 $(intermediates)/main/enums.c: $(dispatch_deps)
 	$(call es-gen)
 
-$(intermediates)/main/api_exec.c: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(glapi)/gl_genexec.py
+$(intermediates)/main/api_exec.c: PRIVATE_SCRIPT := $(MESA_PYTHON) $(glapi)/gl_genexec.py
 $(intermediates)/main/api_exec.c: PRIVATE_XML := -f $(glapi)/gl_and_es_API.xml
 
 $(intermediates)/main/api_exec.c: $(dispatch_deps)
 	$(call es-gen)
 
-$(intermediates)/main/marshal_generated.c: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(glapi)/gl_marshal.py
+$(intermediates)/main/marshal_generated.c: PRIVATE_SCRIPT := $(MESA_PYTHON) $(glapi)/gl_marshal.py
 $(intermediates)/main/marshal_generated.c: PRIVATE_XML := -f $(glapi)/gl_and_es_API.xml
 
 $(intermediates)/main/marshal_generated.c: $(dispatch_deps)
 	$(call es-gen)
 
-$(intermediates)/main/marshal_generated.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(glapi)/gl_marshal_h.py
+$(intermediates)/main/marshal_generated.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(glapi)/gl_marshal_h.py
 $(intermediates)/main/marshal_generated.h: PRIVATE_XML := -f $(glapi)/gl_and_es_API.xml
 
 $(intermediates)/main/marshal_generated.h: $(dispatch_deps)
@@ -101,7 +101,7 @@ $(intermediates)/main/marshal_generated.h: $(dispatch_deps)
 
 GET_HASH_GEN := $(LOCAL_PATH)/main/get_hash_generator.py
 
-$(intermediates)/main/get_hash.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(GET_HASH_GEN)
+$(intermediates)/main/get_hash.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(GET_HASH_GEN)
 $(intermediates)/main/get_hash.h: PRIVATE_XML := -f $(glapi)/gl_and_es_API.xml
 $(intermediates)/main/get_hash.h: $(glapi)/gl_and_es_API.xml \
                $(LOCAL_PATH)/main/get_hash_params.py $(GET_HASH_GEN)
@@ -113,7 +113,7 @@ format_fallback_deps := \
 	$(LOCAL_PATH)/main/format_parser.py \
 	$(FORMAT_FALLBACK)
 
-$(intermediates)/main/format_fallback.c: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(FORMAT_FALLBACK)
+$(intermediates)/main/format_fallback.c: PRIVATE_SCRIPT := $(MESA_PYTHON) $(FORMAT_FALLBACK)
 $(intermediates)/main/format_fallback.c: PRIVATE_XML :=
 $(intermediates)/main/format_fallback.c: $(format_fallback_deps)
 	$(call es-gen, $< /dev/stdout)
@@ -124,7 +124,7 @@ format_info_deps := \
 	$(LOCAL_PATH)/main/format_parser.py \
 	$(FORMAT_INFO)
 
-$(intermediates)/main/format_info.h: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(FORMAT_INFO)
+$(intermediates)/main/format_info.h: PRIVATE_SCRIPT := $(MESA_PYTHON) $(FORMAT_INFO)
 $(intermediates)/main/format_info.h: PRIVATE_XML :=
 $(intermediates)/main/format_info.h: $(format_info_deps)
 	$(call es-gen, $<)
@@ -135,7 +135,7 @@ format_pack_deps := \
 	$(LOCAL_PATH)/main/format_parser.py \
 	$(FORMAT_PACK)
 
-$(intermediates)/main/format_pack.c: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(FORMAT_PACK)
+$(intermediates)/main/format_pack.c: PRIVATE_SCRIPT := $(MESA_PYTHON) $(FORMAT_PACK)
 $(intermediates)/main/format_pack.c: PRIVATE_XML :=
 $(intermediates)/main/format_pack.c: $(format_pack_deps)
 	$(call es-gen, $<)
@@ -146,7 +146,7 @@ format_unpack_deps := \
 	$(LOCAL_PATH)/main/format_parser.py \
 	$(FORMAT_UNPACK)
 
-$(intermediates)/main/format_unpack.c: PRIVATE_SCRIPT := $(MESA_PYTHON2) $(FORMAT_UNPACK)
+$(intermediates)/main/format_unpack.c: PRIVATE_SCRIPT := $(MESA_PYTHON) $(FORMAT_UNPACK)
 $(intermediates)/main/format_unpack.c: PRIVATE_XML :=
 $(intermediates)/main/format_unpack.c: $(format_unpack_deps)
 	$(call es-gen, $<)
diff --git a/src/mesa/Android.libmesa_git_sha1.mk b/src/mesa/Android.libmesa_git_sha1.mk
index fbbbf2fe094..857539c77c2 100644
--- a/src/mesa/Android.libmesa_git_sha1.mk
+++ b/src/mesa/Android.libmesa_git_sha1.mk
@@ -46,7 +46,7 @@ LOCAL_GENERATED_SOURCES += $(addprefix $(intermediates)/, git_sha1.h)
 $(intermediates)/git_sha1.h: $(wildcard $(MESA_TOP)/.git/logs/HEAD)
 	@mkdir -p $(dir $@)
 	@echo "GIT-SHA1: $(PRIVATE_MODULE) <= git"
-	$(hide) $(MESA_PYTHON2) $(MESA_TOP)/bin/git_sha1_gen.py --output $@
+	$(hide) $(MESA_PYTHON) $(MESA_TOP)/bin/git_sha1_gen.py --output $@
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := $(intermediates)
 
diff --git a/src/mesa/drivers/dri/i965/Android.mk b/src/mesa/drivers/dri/i965/Android.mk
index 29b46147f39..fe360fb99be 100644
--- a/src/mesa/drivers/dri/i965/Android.mk
+++ b/src/mesa/drivers/dri/i965/Android.mk
@@ -317,7 +317,7 @@ i965_oa_xml_FILES := $(addprefix $(MESA_TOP)/src/mesa/drivers/dri/i965/, \
 $(intermediates)/brw_oa_metrics.c: $(LOCAL_PATH)/brw_oa.py $(i965_oa_xml_FILES)
 	@echo "target Generated: $(PRIVATE_MODULE) <= $(notdir $(@))"
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< \
+	$(hide) $(MESA_PYTHON) $< \
 	--code=$@ \
 	--header=$(call generated-sources-dir-for,SHARED_LIBRARIES,i965_dri,,)/brw_oa_metrics.h \
 	$(i965_oa_xml_FILES)
diff --git a/src/panfrost/Android.midgard.mk b/src/panfrost/Android.midgard.mk
index 6c9cd4c18e9..d61acb935b3 100644
--- a/src/panfrost/Android.midgard.mk
+++ b/src/panfrost/Android.midgard.mk
@@ -52,7 +52,7 @@ midgard_nir_algebraic_deps := \
 
 $(intermediates)/midgard_nir_algebraic.c: $(midgard_nir_algebraic_deps)
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $(midgard_nir_algebraic_gen) -p $< > $@
+	$(hide) $(MESA_PYTHON) $(midgard_nir_algebraic_gen) -p $< > $@
 
 LOCAL_EXPORT_C_INCLUDE_DIRS := \
 	$(MESA_TOP)/src/panfrost/midgard/ \
diff --git a/src/util/Android.mk b/src/util/Android.mk
index 22f6342365d..f10117f3c6d 100644
--- a/src/util/Android.mk
+++ b/src/util/Android.mk
@@ -101,7 +101,7 @@ PRIVATE_MO_FILES := $(MESA_DRI_OPTIONS_LANGS:%=$(intermediates)/xmlpool/%.gmo)
 
 LOCAL_GENERATED_SOURCES += $(PRIVATE_MO_FILES)
 
-$(LOCAL_GENERATED_SOURCES): PRIVATE_PYTHON := $(MESA_PYTHON2)
+$(LOCAL_GENERATED_SOURCES): PRIVATE_PYTHON := $(MESA_PYTHON)
 
 $(PRIVATE_MO_FILES): $(intermediates)/xmlpool/%.gmo: $(intermediates)/xmlpool/%.po
 	mkdir -p $(dir $@)
diff --git a/src/vulkan/Android.mk b/src/vulkan/Android.mk
index 4b1695abc65..a1d714370e6 100644
--- a/src/vulkan/Android.mk
+++ b/src/vulkan/Android.mk
@@ -59,7 +59,7 @@ $(firstword $(LOCAL_GENERATED_SOURCES)): $(MESA_TOP)/src/vulkan/util/gen_enum_to
 		$(vulkan_api_xml)
 	@echo "target Generated: $(PRIVATE_MODULE) <= $(notdir $(@))"
 	@mkdir -p $(dir $@)
-	$(hide) $(MESA_PYTHON2) $< \
+	$(hide) $(MESA_PYTHON) $< \
 	    --xml $(vulkan_api_xml) \
 	    --outdir $(dir $@)
 
-- 
2.24.1


From 7aa62104f0ba53a90b1260079b7108fe355afd02 Mon Sep 17 00:00:00 2001
From: Eric Engestrom <eric@engestrom.ch>
Date: Sun, 2 Feb 2020 15:26:16 +0000
Subject: [PATCH 2/5] python: explicitly require python3

Ubuntu has dropped the `python` symlink to `python2` [1] instead of
redirecting it to `python3` like other distros are doing, which means
that if we want to build Mesa on Ubuntu we need the `python3` shebang.

[1] https://lists.ubuntu.com/archives/ubuntu-devel/2020-January/040882.html

Reported-by: Vinson Lee <vlee@freedesktop.org>
Signed-off-by: Eric Engestrom <eric@engestrom.ch>
---
 bin/meson_get_version.py             | 2 +-
 bin/symbols-check.py                 | 2 +-
 src/egl/egl-entrypoint-check.py      | 2 +-
 src/egl/generate/gen_egl_dispatch.py | 2 +-
 src/mapi/new/genCommon.py            | 2 +-
 src/mapi/new/gen_gldispatch_mapi.py  | 2 +-
 6 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/bin/meson_get_version.py b/bin/meson_get_version.py
index a221e26f250..2e631d23673 100644
--- a/bin/meson_get_version.py
+++ b/bin/meson_get_version.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 # encoding=utf-8
 # Copyright © 2017 Intel Corporation
 
diff --git a/bin/symbols-check.py b/bin/symbols-check.py
index 0d56a19561e..eb3f1e11b01 100644
--- a/bin/symbols-check.py
+++ b/bin/symbols-check.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 import argparse
 import os
diff --git a/src/egl/egl-entrypoint-check.py b/src/egl/egl-entrypoint-check.py
index 1e876615028..1bdb1a19be0 100644
--- a/src/egl/egl-entrypoint-check.py
+++ b/src/egl/egl-entrypoint-check.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 import argparse
 
diff --git a/src/egl/generate/gen_egl_dispatch.py b/src/egl/generate/gen_egl_dispatch.py
index 2063e9d0993..17200db0f39 100644
--- a/src/egl/generate/gen_egl_dispatch.py
+++ b/src/egl/generate/gen_egl_dispatch.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 # (C) Copyright 2016, NVIDIA CORPORATION.
 # All Rights Reserved.
diff --git a/src/mapi/new/genCommon.py b/src/mapi/new/genCommon.py
index bf71de14891..4131d425cd3 100644
--- a/src/mapi/new/genCommon.py
+++ b/src/mapi/new/genCommon.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 # (C) Copyright 2015, NVIDIA CORPORATION.
 # All Rights Reserved.
diff --git a/src/mapi/new/gen_gldispatch_mapi.py b/src/mapi/new/gen_gldispatch_mapi.py
index 86958de3007..a2c9970b37c 100755
--- a/src/mapi/new/gen_gldispatch_mapi.py
+++ b/src/mapi/new/gen_gldispatch_mapi.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 
 # Copyright (C) 2010 LunarG Inc.
 # (C) Copyright 2015, NVIDIA CORPORATION.
-- 
2.24.1


From 88491ff57171bf522f5e0999302635d1074a2858 Mon Sep 17 00:00:00 2001
From: Eric Engestrom <eric@engestrom.ch>
Date: Sun, 2 Feb 2020 18:57:08 +0000
Subject: [PATCH 3/5] eglFunctionList.py: drop shebang line from non-executable
 python file

Signed-off-by: Eric Engestrom <eric@engestrom.ch>
---
 src/egl/generate/eglFunctionList.py | 2 --
 1 file changed, 2 deletions(-)

diff --git a/src/egl/generate/eglFunctionList.py b/src/egl/generate/eglFunctionList.py
index 192280f58f0..55b3d3d7a8b 100644
--- a/src/egl/generate/eglFunctionList.py
+++ b/src/egl/generate/eglFunctionList.py
@@ -1,5 +1,3 @@
-#!/usr/bin/env python
-
 """
 Contains a list of EGL functions to generate dispatch functions for.
 
-- 
2.24.1


From 77adae61c073aa54a7b6068e10b4616290769339 Mon Sep 17 00:00:00 2001
From: Eric Engestrom <eric@engestrom.ch>
Date: Sun, 2 Feb 2020 18:25:47 +0000
Subject: [PATCH 4/5] python: drop python2 support

Signed-off-by: Eric Engestrom <eric@engestrom.ch>
---
 src/compiler/glsl/tests/sexps.py  |  8 ++------
 src/compiler/nir/nir_algebraic.py | 17 ++++-------------
 src/util/format/u_format_pack.py  | 11 ++---------
 src/util/xmlpool/gen_xmlpool.py   |  9 ++-------
 4 files changed, 10 insertions(+), 35 deletions(-)

diff --git a/src/compiler/glsl/tests/sexps.py b/src/compiler/glsl/tests/sexps.py
index 7de5db39be6..36fd7251eb3 100644
--- a/src/compiler/glsl/tests/sexps.py
+++ b/src/compiler/glsl/tests/sexps.py
@@ -29,10 +29,6 @@
 
 import re
 import sys
-if sys.version_info >= (3, 0, 0):
-    STRING_TYPE = str
-else:
-    STRING_TYPE = unicode
 
 def check_sexp(sexp):
     """Verify that the argument is a proper sexp.
@@ -44,7 +40,7 @@ def check_sexp(sexp):
     if isinstance(sexp, list):
         for s in sexp:
             check_sexp(s)
-    elif not isinstance(sexp, (STRING_TYPE, bytes)):
+    elif not isinstance(sexp, (str, bytes)):
         raise Exception('Not a sexp: {0!r}'.format(sexp))
 
 def parse_sexp(sexp):
@@ -75,7 +71,7 @@ def sexp_to_string(sexp):
     """Convert a sexp, represented as nested lists containing strings,
     into a single string of the form parseable by mesa.
     """
-    if isinstance(sexp, STRING_TYPE):
+    if isinstance(sexp, str):
         return sexp
     if isinstance(sexp, bytes):
         return sexp.encode('utf-8')
diff --git a/src/compiler/nir/nir_algebraic.py b/src/compiler/nir/nir_algebraic.py
index 480dcaf3cf5..c866ef4f3be 100644
--- a/src/compiler/nir/nir_algebraic.py
+++ b/src/compiler/nir/nir_algebraic.py
@@ -60,15 +60,6 @@ def get_c_opcode(op):
       else:
          return 'nir_op_' + op
 
-
-if sys.version_info < (3, 0):
-    integer_types = (int, long)
-    string_type = unicode
-
-else:
-    integer_types = (int, )
-    string_type = str
-
 _type_re = re.compile(r"(?P<type>int|uint|bool|float)?(?P<bits>\d+)?")
 
 def type_bits(type_str):
@@ -107,9 +98,9 @@ class Value(object):
          return Expression(val, name_base, varset)
       elif isinstance(val, Expression):
          return val
-      elif isinstance(val, string_type):
+      elif isinstance(val, str):
          return Variable(val, name_base, varset)
-      elif isinstance(val, (bool, float) + integer_types):
+      elif isinstance(val, (bool, float, int)):
          return Constant(val, name_base)
 
    def __init__(self, val, name, type_str):
@@ -246,7 +237,7 @@ class Constant(Value):
    def hex(self):
       if isinstance(self.value, (bool)):
          return 'NIR_TRUE' if self.value else 'NIR_FALSE'
-      if isinstance(self.value, integer_types):
+      if isinstance(self.value, int):
          return hex(self.value)
       elif isinstance(self.value, float):
          i = struct.unpack('Q', struct.pack('d', self.value))[0]
@@ -265,7 +256,7 @@ class Constant(Value):
    def type(self):
       if isinstance(self.value, (bool)):
          return "nir_type_bool"
-      elif isinstance(self.value, integer_types):
+      elif isinstance(self.value, int):
          return "nir_type_int"
       elif isinstance(self.value, float):
          return "nir_type_float"
diff --git a/src/util/format/u_format_pack.py b/src/util/format/u_format_pack.py
index 0653e5e4a9e..cfee726a8ae 100644
--- a/src/util/format/u_format_pack.py
+++ b/src/util/format/u_format_pack.py
@@ -43,13 +43,6 @@ import sys
 from u_format_parse import *
 
 
-if sys.version_info < (3, 0):
-    integer_types = (int, long)
-
-else:
-    integer_types = (int, )
-
-
 def inv_swizzles(swizzles):
     '''Return an array[4] of inverse swizzle terms'''
     '''Only pick the first matching value to avoid l8 getting blue and i8 getting alpha'''
@@ -221,7 +214,7 @@ def truncate_mantissa(x, bits):
     '''Truncate an integer so it can be represented exactly with a floating
     point mantissa'''
 
-    assert isinstance(x, integer_types)
+    assert isinstance(x, int)
 
     s = 1
     if x < 0:
@@ -245,7 +238,7 @@ def value_to_native(type, value):
     '''Get the value of unity for this type.'''
     if type.type == FLOAT:
         if type.size <= 32 \
-            and isinstance(value, integer_types):
+            and isinstance(value, int):
             return truncate_mantissa(value, 23)
         return value
     if type.type == FIXED:
diff --git a/src/util/xmlpool/gen_xmlpool.py b/src/util/xmlpool/gen_xmlpool.py
index 3a352312644..259e192e206 100644
--- a/src/util/xmlpool/gen_xmlpool.py
+++ b/src/util/xmlpool/gen_xmlpool.py
@@ -15,11 +15,6 @@ import os
 import re
 import sys
 
-if sys.version_info < (3, 0):
-    gettext_method = 'ugettext'
-else:
-    gettext_method = 'gettext'
-
 # Escape special characters in C strings
 def escapeCString(s):
     escapeSeqs = {'\a' : '\\a', '\b' : '\\b', '\f' : '\\f', '\n' : '\\n',
@@ -124,7 +119,7 @@ def expandMatches(matches, translations, outfile, end=None):
         if len(matches) == 1 and i < len(translations) and \
                not matches[0].expand(r'\7').endswith('\\'):
             suffix = ' \\'
-        text = escapeCString(getattr(trans, gettext_method)(expandCString(
+        text = escapeCString(getattr(trans, 'gettext')(expandCString(
             matches[0].expand (r'\5'))))
         text = (matches[0].expand(r'\1' + lang + r'\3"' + text + r'"\7') + suffix)
 
@@ -132,7 +127,7 @@ def expandMatches(matches, translations, outfile, end=None):
 
         # Expand any subsequent enum lines
         for match in matches[1:]:
-            text = escapeCString(getattr(trans, gettext_method)(expandCString(
+            text = escapeCString(getattr(trans, 'gettext')(expandCString(
                 match.expand(r'\3'))))
             text = match.expand(r'\1"' + text + r'"\5')
 
-- 
2.24.1


From 48ef398afa78e7c40c44c414b20114c67bcb8c97 Mon Sep 17 00:00:00 2001
From: Eric Engestrom <eric@engestrom.ch>
Date: Sun, 2 Feb 2020 15:29:08 +0000
Subject: [PATCH 5/5] meson: don't bother trying `python` or `python2`

If `python3` is not available nothing will build anyway.

Signed-off-by: Eric Engestrom <eric@engestrom.ch>
---
 meson.build | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/meson.build b/meson.build
index c48945b3c48..9d9f3031e90 100644
--- a/meson.build
+++ b/meson.build
@@ -22,7 +22,7 @@ project(
   'mesa',
   ['c', 'cpp'],
   version : run_command(
-    [find_program('python', 'python2', 'python3'), 'bin/meson_get_version.py']
+    [find_program('python', 'python3'), 'bin/meson_get_version.py']
   ).stdout(),
   license : 'MIT',
   meson_version : '>= 0.46',
-- 
2.24.1

